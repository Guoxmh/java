人生百年，不过是教人如何取舍”




使用数组指针指向一维数组
int a[3]={1,2,3}; 那么p就是指向这个数组a的指针。
int(*p)[3]=&a; // 这里赋值一定要用取地址符号。也就是取数组a的地址。



int(*)[3]是个类型



int arr[4][4] = { { 1, 2, 3, 4 }, { 5, 6, 7, 8 }, { 9, 10, 11, 12 } ,1,2,3,4};
	int ret = sizeof(arr) / sizeof(arr[0]);
	printf("%d", ret);   //结果是四，在sizeof中arr是整个数组的地址；
                                                   // arr[0]可能是第一行的地址；

二级指针可接受二级指针、一级指针的地址、指针数组、一维数组的地址。



一级指针可接受一维数组、指针、&a。


结构体传参的时候，要传结构体的地址。






比特读书书籍共享地址 提取码：7h2v
Effective Java中文版（第2版）
.pdf (经典中的经典)阿里巴巴Java开发手册v1.2.0.pdf 
（国内Java开发者造出来的编码规范）
Java程序员面试宝典(杨磊) PDF 扫描版.pdf （面试都问啥）更多参见书籍共享



　java中的构造方法是用来初始化一个对象的，
并为为实例变量赋予合适的初始值。因此构造方法不需要返回类型。　　
构造方法必须满足以下语法规则：
　　(1)方法名必须与类名相同；　　
       (2)不要声明返回类型；　　
       (3)不能被static、final、synchronized、abstract和native修饰；　
　   (4)构造方法不能被子类继承，所以用final和abstract修饰没有意义。　　
构造方法的创建如下示例：



public class Demo {
    private int x;
    public Demo() { // 不带参数的构造方法
     
    }
    public Demo(int x) { //带参数的构造方法
        this.x=x;
    }
    public int Demo(int x) { //不是构造方法
        return x++;
    }
}


